apt update
apt install docker docker.io python3-pip python3 -y
pip3 install docker-compose -i https://pypi.tuna.tsinghua.edu.cn/simple
docker swarm init
docker node update --label-add='name=linux-1' $(docker node ls -q)
sudo systemctl daemon-reload
sudo systemctl restart docker
cd /root
git clone https://github.com/CTFD/CTFd.git --depth=1
cd CTFd/CTFd/plugins
git clone https://github.com/VaalaCat/ctfd-whale.git --depth=1
cd /root/CTFd
mkdir conf/frp
rm -rf docker-compose.yml
echo "version: '3'

services:
  ctfd:
    build: .
    user: root
    restart: always
    ports:
      - "80:8000"
    environment:
      - UPLOAD_FOLDER=/var/uploads
      - DATABASE_URL=mysql+pymysql://ctfd:ctfd@db/ctfd
      - REDIS_URL=redis://cache:6379
      - WORKERS=1
      - LOG_FOLDER=/var/log/CTFd
      - ACCESS_LOG=-
      - ERROR_LOG=-
      - REVERSE_PROXY=false
    volumes:
      - .data/CTFd/logs:/var/log/CTFd
      - .data/CTFd/uploads:/var/uploads
      - .:/opt/CTFd:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
    networks:
      default:
      internal:
      frp_connect:
        ipv4_address: 172.1.0.5

  db:
    image: mariadb:10.4.12
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=ctfd
      - MYSQL_USER=ctfd
      - MYSQL_PASSWORD=ctfd
      - MYSQL_DATABASE=ctfd
    volumes:
      - .data/mysql:/var/lib/mysql
    networks:
      internal:
    # This command is required to set important mariadb defaults
    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci, --wait_timeout=28800, --log-warnings=0]

  cache:
    image: redis:4
    restart: always
    volumes:
    - .data/redis:/data
    networks:
      internal:

  frps:
    image: glzjin/frp
    restart: always
    volumes:
      - ./conf/frp:/conf
    entrypoint:
      - /usr/local/bin/frps
      - -c
      - /conf/frps.ini
    ports:
      - 9125-9129:9125-9129  # 映射direct类型题目的端口
      - 9123:9123  # 映射http类型题目的端口
    networks:
      default:
      frp_connect:
        ipv4_address: 172.1.0.3
  
  frpc:
    image: glzjin/frp:latest
    restart: always
    volumes:
      - ./conf/frp:/conf/
    entrypoint:
      - /usr/local/bin/frpc
      - -c
      - /conf/frpc.ini
    depends_on:
      - frps
    networks:
      frp_containers:
      frp_connect:
        ipv4_address: 172.1.0.4

networks:
  default:
  internal:
    internal: true
  frp_connect:
    driver: overlay
    internal: true
    ipam:
      config:
        - subnet: 172.1.0.0/16
  frp_containers:
    driver: overlay
    internal: true  # 如果允许题目容器访问外网，则可以去掉
    attachable: true
    ipam:
      config:
        - subnet: 172.2.0.0/16
">>docker-compose.yml
cd conf/frp
echo "[common]
token = your_token
server_addr = 172.1.0.3
server_port = 7000
admin_addr = 172.1.0.4
admin_port = 7400
" >> frpc.ini
echo "[common]
bind_port = 7000
vhost_http_port = 9123
token = your_token
subdomain_host = node.vaala.ink
" >> frps.ini
docker pull portainer/portainer
docker run -d -p 9000:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --name prtainer-test portainer/portainer
git submodule update --init
docker-compose up -d
